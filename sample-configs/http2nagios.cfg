; Lines starting with "#" are defaults

[server]
; ### ip (0.0.0.0) ###
; IP to bind server
#ip: 0.0.0.0

; ### port (15667) ###
; Port to bind server
#port: 15667

; ### ssl (false) ###
; Use SSL for server communication
#ssl: false

; ### sslcert (no default) ###
; Read server key and certificate from this file
;sslcert: server.pem

; ### pidfile (/var/run/nagixsc_http2nagios.pid) ###
; Where to store pid file if daemonizing
#pidfile: /var/run/nagixsc_http2nagios.pid

; ### mode (no default) ###
; Write checkresult files ("checkresult") or 
; write passive checks to command file ("passive")
mode: checkresult

; ### acl (false) ###
; Use ACLs to check if the user is allowed to submit check results for this
; host
#acl: false

[mode_passive]
; ### pipe ###
; File and path of Nagios command pipe
pipe: /var/lib/nagios3/rw/nagios.cmd

[mode_checkresult]
; ### dir ###
; Path to Nagios checkresult dir
;
; For Debian packages set to "/var/lib/nagios3/spool/checkresults"
; For local compiled Nagios set to "/usr/local/nagios/var/spool/checkresults"
;
; For quick start set to "/tmp/cr"
dir: /tmp/cr

[users]
; All users who are allowed to connect and post informations are stored here.
; Passwords must be md5 encrypted, for example in shell use:
; echo -n "Password" | md5sum -
nagixsc: 019b0966d98fb71d1a4bc4ca0c81d5cc ; PW: nagixsc

[acl_allowed_hosts_list]
; (List of) allowed host(s) per user
; Option "acl" in section "server" must be set to "true"!
;
; Format: <username>: <hostname1> [, <hostname2> [, <hostname3> [...]]]
;
; Example (allow only "host1" for "nagixsc"):
;nagixsc: host1 ; "host2.foo.bar" of sample config not allowed

[acl_allowed_hosts_re]
; Regular Expression of allowed host(s) per user
; Option "acl" in section "server" must be set to "true"!
;
; ATTENTION!
; - Needs more testing!
; - Python Regular Expressions, see http://docs.python.org/library/re.html
;
; Format: <username>: <regexp>
;
; Example (allow only "host1" for "nagixsc", same as above in "acl_allowed_hosts_list"):
;nagixsc: ^host1$

